#requires -version 2


function Invoke-WMIRunProcess
{
<#
.SYNOPSIS
TBA
.DESCRIPTION
TBA
.PARAMETER

.EXAMPLE
TBA
#>
    param
    (
        #Parameter assignment
        [Parameter(Mandatory = $False, Position = 1)] 
        [string]$User,
        [Parameter(Mandatory = $False, Position = 2)] 
        [string]$Pass,
        [Parameter(Mandatory = $False, Position = 3)] 
        [string[]]$TARGETS = "."
    )

    if($User -and $Pass)
    {
        $password = ConvertTo-SecureString $Pass -asplaintext -force 
        $cred = New-Object -Typename System.Management.Automation.PSCredential -argumentlist $User,$password

        # Provide hidden flag for user to specify if they want it hidden or not
        $startup=[wmiclass]"Win32_ProcessStartup"
        $startup.Properties['ShowWindow'].value=$False
        ([wmiclass]"win32_Process").create('ping.exe -n 4 192.168.63.158','C:\',$startup)
    }

    else
    {
        # Provide hidden flag for user to specify if they want it hidden or not
        $startup=[wmiclass]"Win32_ProcessStartup"
        $startup.Properties['ShowWindow'].value=$False
        ([wmiclass]"win32_Process").create('ping.exe -n 4 192.168.63.158','C:\',$startup)
    }

}


function Invoke-WMIKillProcess
{
<#
.SYNOPSIS
TBA
Some of this is from - http://blogs.technet.com/b/heyscriptingguy/archive/2009/12/10/hey-scripting-guy-december-10-2009.aspx
.DESCRIPTION
TBA
.PARAMETER TBA
.EXAMPLE
TBA
#>

    param
    (
        #Parameter assignment
        [Parameter(Mandatory = $False, Position = 1)] 
        [string]$User,
        [Parameter(Mandatory = $False, Position = 2)] 
        [string]$Pass,
        [Parameter(Mandatory = $False, Position = 3)] 
        [string[]]$TARGETS = "."
    )

    Get-WmiObject -Class win32_Process -Filter "name = 'notepad.exe'" | ForEach-Object { $_.Terminate() }

}

function Get-ProcessOwners
{
<#
.SYNOPSIS
TBA
Some of this is from - http://blogs.technet.com/b/heyscriptingguy/archive/2009/12/10/hey-scripting-guy-december-10-2009.aspx
.DESCRIPTION
TBA
.PARAMETER TBA
.EXAMPLE
TBA
#>

    param
    (
        #Parameter assignment
        [Parameter(Mandatory = $False)] 
        [string]$User,
        [Parameter(Mandatory = $False)] 
        [string]$Pass,
        [Parameter(Mandatory = $False)] 
        [string[]]$TARGETS = "."
    )

    if($User -and $Pass)
    {
        $password = ConvertTo-SecureString $Pass -asplaintext -force 
        $cred = New-Object -Typename System.Management.Automation.PSCredential -argumentlist $User,$password
        Write-Host "This hit"
    }

    Invoke-WMIMethod -class win32_process -name Create -Argumentlist notepad.exe -Credential $cred -ComputerName $TARGETS

    Get-WmiObject -class win32_process -Filter "Name = 'notepad.exe'" -Credential $cred -ComputerName $TARGETS | foreach-object { $_.GetOwner().user; $_.GetOwnerSid().sid; }

}
