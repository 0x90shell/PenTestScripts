#!/usr/bin/env python
# IP sort and uniquing script by @ChrisTruncer

import os
import sys

try:
    # Take filename as first argument
    ip_file = sys.argv[1]
except IndexError:
    # Clear the console
    os.system('clear')
    print "#####################################################################"
    print "#                             IP Sorter                             #"
    print "#####################################################################\n"
    print "[*] ERROR: Please provide a file containing IPs to be uniqued \
        and sorted!\n".replace('    ', '')
    print "Example: ./IPSorter.py ips.txt"
    sys.exit()

# Read in all IPs from user specified file
with open(ip_file, 'r') as open_file:
    ips = open_file.readlines()

# This came from http://www.secnetix.de/olli/Python/tricks.hawk#sortips
for i in range(len(ips)):
    ips[i] = "%3s.%3s.%3s.%3s" % tuple(ips[i].split("."))

# Use built in sort method
ips.sort()

# Replace all the spaces in our list
for i in range(len(ips)):
    ips[i] = ips[i].replace(" ", "")

# List used to store unique IPs
uniqued_ips = []

# Loop through non-unique IP list, and add only unique IPs to it.
for nonunique_ip in ips:
    if nonunique_ip not in uniqued_ips:
        uniqued_ips.append(nonunique_ip)

# Iterate through our unique IP list and print it's contents
for all_ips in uniqued_ips:
    print all_ips.strip()
